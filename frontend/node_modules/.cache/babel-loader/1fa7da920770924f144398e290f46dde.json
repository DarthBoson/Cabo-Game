{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\Project Juhari v2\\\\frontend\\\\src\\\\components\\\\GameLobby.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './GameLobby.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nfunction GameLobby({\n  players,\n  card1Pile,\n  card2Pile,\n  currentTurn,\n  onNextTurn\n}) {\n  _s();\n  const [showPopup, setShowPopup] = useState(false);\n  const [topCard, setTopCard] = useState(null);\n  const [allowCardSelection, setAllowCardSelection] = useState(false);\n  const [allowCardSwap, setAllowCardSwap] = useState(false);\n  const [allowCardReplacement, setAllowCardReplacement] = useState(false);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [showCardValuePopup, setShowCardValuePopup] = useState(false);\n  const [selectedCardValue, setSelectedCardValue] = useState(null);\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [showCaboPopup, setShowCaboPopup] = useState(false);\n  const [caboCalled, setCaboCalled] = useState(false);\n  const [extraTurnsLeft, setExtraTurnsLeft] = useState(0);\n  const [swapFromPile2, setSwapFromPile2] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    setTopCard(card1Pile[card1Pile.length - 1]);\n  }, [card1Pile]);\n  useEffect(() => {\n    setCurrentPlayer(players[currentTurn]);\n  }, [currentTurn, players]);\n  useEffect(() => {\n    socket.on('allowCardSelection', ({\n      topCard\n    }) => {\n      setTopCard(topCard);\n      setAllowCardSelection(true);\n    });\n    socket.on('allowCardSwap', ({\n      topCard\n    }) => {\n      setTopCard(topCard);\n      setAllowCardSwap(true);\n    });\n    socket.on('allowCardSwapFromPile2', ({\n      topCard\n    }) => {\n      setTopCard(topCard);\n      setSwapFromPile2(true);\n    });\n    socket.on('gameEnded', players => {\n      navigate('/results', {\n        state: {\n          players\n        }\n      });\n    });\n    return () => {\n      socket.off('allowCardSelection');\n      socket.off('allowCardSwap');\n      socket.off('allowCardSwapFromPile2');\n      socket.off('gameEnded');\n    };\n  }, [navigate]);\n  const handleCardClick = () => {\n    if (card1Pile.length > 0) {\n      setTopCard(card1Pile[card1Pile.length - 1]);\n      setShowPopup(true);\n    }\n  };\n  const handleUsePower = () => {\n    const cardValue = topCard.slice(0, -1);\n    if (['7', '8', '9', '10'].includes(cardValue)) {\n      socket.emit('usePower');\n    } else if (['J', 'Q'].includes(cardValue)) {\n      socket.emit('usePower');\n    } else {\n      socket.emit('usePower');\n    }\n    setShowPopup(false);\n  };\n  const handleReplaceCard = () => {\n    setAllowCardReplacement(true);\n    setShowPopup(false);\n  };\n  const handleCardSelection = (cardValue, cardIndex, playerIndex) => {\n    if (allowCardSelection) {\n      setSelectedCardValue(cardValue);\n      setShowCardValuePopup(true);\n      setAllowCardSelection(false);\n      socket.emit('selectCard');\n    } else if (allowCardSwap) {\n      const selectedCard = {\n        playerIndex,\n        cardIndex\n      };\n      const newSelectedCards = [...selectedCards, selectedCard];\n      setSelectedCards(newSelectedCards);\n      if (newSelectedCards.length === 2) {\n        socket.emit('swapCards', newSelectedCards[0], newSelectedCards[1]);\n        setSelectedCards([]);\n        setAllowCardSwap(false);\n      }\n    } else if (allowCardReplacement && playerIndex === currentTurn) {\n      socket.emit('replaceCard', playerIndex, cardIndex);\n      setAllowCardReplacement(false);\n    } else if (swapFromPile2 && playerIndex === currentTurn) {\n      socket.emit('replaceCardFromPile2', currentTurn, cardIndex);\n      setSwapFromPile2(false);\n    }\n  };\n  const closeCardValuePopup = () => {\n    setShowCardValuePopup(false);\n  };\n  const handleSwapFromPile2 = () => {\n    if (card2Pile.length > 0) {\n      socket.emit('useCardFromPile2');\n    }\n  };\n  const swapCardFromPile2 = (playerIndex, cardIndex) => {\n    if (playerIndex !== null && card2Pile.length > 0) {\n      socket.emit('swapCardFromPile2', playerIndex, cardIndex);\n    }\n  };\n  const callCabo = () => {\n    socket.emit('callCabo');\n    setShowCaboPopup(true);\n    setCaboCalled(true);\n    setExtraTurnsLeft(players.length - 1);\n    setTimeout(() => {\n      setShowCaboPopup(false);\n    }, 5000);\n  };\n  const handleNextTurn = () => {\n    if (caboCalled) {\n      if (extraTurnsLeft > 0) {\n        setExtraTurnsLeft(extraTurnsLeft - 1);\n        onNextTurn();\n      } else {\n        socket.emit('endGame');\n      }\n    } else {\n      onNextTurn();\n    }\n  };\n  const renderPlayerSection = (player, index, position) => {\n    const isCurrentTurn = currentTurn === index;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `player-section ${position}`,\n      children: [position === 'bottom' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-hand\",\n        children: player.cards.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card ${allowCardSelection || allowCardSwap || allowCardReplacement && index === currentTurn ? 'selectable' : ''}`,\n          onClick: () => (allowCardSelection || allowCardSwap || allowCardReplacement && index === currentTurn) && handleCardSelection(card, cardIndex, index),\n          style: {\n            cursor: allowCardSelection || allowCardSwap || allowCardReplacement && index === currentTurn ? 'pointer' : 'default'\n          },\n          children: card\n        }, cardIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `player-card ${isCurrentTurn ? 'current-turn' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: player.profileImage,\n          alt: `${player.name}'s profile`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), position === 'top' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-hand\",\n        children: player.cards.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card ${allowCardSelection || allowCardSwap || allowCardReplacement && index === currentTurn ? 'selectable' : ''}`,\n          onClick: () => (allowCardSelection || allowCardSwap || allowCardReplacement && index === currentTurn) && handleCardSelection(card, cardIndex, index),\n          style: {\n            cursor: allowCardSelection || allowCardSwap || allowCardReplacement && index === currentTurn ? 'pointer' : 'default'\n          },\n          children: card\n        }, cardIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-lobby\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-cards\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar-card\",\n            onClick: handleCardClick,\n            children: [\"Remaining: \", card1Pile.length, \" cards\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar-card\",\n            onClick: handleSwapFromPile2,\n            children: card2Pile.length > 0 ? `Card 2: ${card2Pile[card2Pile.length - 1]}` : 'Card 2'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Button 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: callCabo,\n            children: \"Call Cabo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSwapFromPile2,\n            children: \"Swap Card from Pile 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextTurn,\n            children: \"Next Turn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row top-row\",\n          children: players.slice(0, 4).map((player, index) => renderPlayerSection(player, index, 'top'))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row bottom-row\",\n          children: players.slice(4, 8).map((player, index) => renderPlayerSection(player, index + 4, 'bottom'))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Top Card: \", topCard]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUsePower,\n          children: \"Use Power\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReplaceCard,\n          children: \"Replace Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), showCardValuePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Selected Card Value: \", selectedCardValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeCardValuePopup,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this), showCaboPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"The current player has called Cabo!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(GameLobby, \"tgSz4yYFttkv/XPaEYL2NJfHc3s=\", false, function () {\n  return [useNavigate];\n});\n_c = GameLobby;\nexport default GameLobby;\nvar _c;\n$RefreshReg$(_c, \"GameLobby\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","io","jsxDEV","_jsxDEV","socket","GameLobby","players","card1Pile","card2Pile","currentTurn","onNextTurn","_s","showPopup","setShowPopup","topCard","setTopCard","allowCardSelection","setAllowCardSelection","allowCardSwap","setAllowCardSwap","allowCardReplacement","setAllowCardReplacement","selectedCards","setSelectedCards","showCardValuePopup","setShowCardValuePopup","selectedCardValue","setSelectedCardValue","currentPlayer","setCurrentPlayer","showCaboPopup","setShowCaboPopup","caboCalled","setCaboCalled","extraTurnsLeft","setExtraTurnsLeft","swapFromPile2","setSwapFromPile2","navigate","length","on","state","off","handleCardClick","handleUsePower","cardValue","slice","includes","emit","handleReplaceCard","handleCardSelection","cardIndex","playerIndex","selectedCard","newSelectedCards","closeCardValuePopup","handleSwapFromPile2","swapCardFromPile2","callCabo","setTimeout","handleNextTurn","renderPlayerSection","player","index","position","isCurrentTurn","className","children","cards","map","card","onClick","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","src","profileImage","alt","name","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/Project Juhari v2/frontend/src/components/GameLobby.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport './GameLobby.css';\r\n\r\nconst socket = io('http://localhost:4000');\r\n\r\nfunction GameLobby({ players, card1Pile, card2Pile, currentTurn, onNextTurn }) {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [topCard, setTopCard] = useState(null);\r\n  const [allowCardSelection, setAllowCardSelection] = useState(false);\r\n  const [allowCardSwap, setAllowCardSwap] = useState(false);\r\n  const [allowCardReplacement, setAllowCardReplacement] = useState(false);\r\n  const [selectedCards, setSelectedCards] = useState([]);\r\n  const [showCardValuePopup, setShowCardValuePopup] = useState(false);\r\n  const [selectedCardValue, setSelectedCardValue] = useState(null);\r\n  const [currentPlayer, setCurrentPlayer] = useState(null);\r\n  const [showCaboPopup, setShowCaboPopup] = useState(false);\r\n  const [caboCalled, setCaboCalled] = useState(false);\r\n  const [extraTurnsLeft, setExtraTurnsLeft] = useState(0);\r\n  const [swapFromPile2, setSwapFromPile2] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setTopCard(card1Pile[card1Pile.length - 1]);\r\n  }, [card1Pile]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPlayer(players[currentTurn]);\r\n  }, [currentTurn, players]);\r\n\r\n  useEffect(() => {\r\n    socket.on('allowCardSelection', ({ topCard }) => {\r\n      setTopCard(topCard);\r\n      setAllowCardSelection(true);\r\n    });\r\n\r\n    socket.on('allowCardSwap', ({ topCard }) => {\r\n      setTopCard(topCard);\r\n      setAllowCardSwap(true);\r\n    });\r\n\t\r\n\tsocket.on('allowCardSwapFromPile2', ({ topCard }) => {\r\n      setTopCard(topCard);\r\n      setSwapFromPile2(true);\r\n\t});\r\n\t\r\n    socket.on('gameEnded', (players) => {\r\n      navigate('/results', { state: { players } });\r\n    });\r\n\r\n    return () => {\r\n      socket.off('allowCardSelection');\r\n      socket.off('allowCardSwap');\r\n      socket.off('allowCardSwapFromPile2');\r\n      socket.off('gameEnded');\r\n    };\r\n  }, [navigate]);\r\n\r\n  const handleCardClick = () => {\r\n    if (card1Pile.length > 0) {\r\n      setTopCard(card1Pile[card1Pile.length - 1]);\r\n      setShowPopup(true);\r\n    }\r\n  };\r\n\r\n  const handleUsePower = () => {\r\n    const cardValue = topCard.slice(0, -1);\r\n    if (['7', '8', '9', '10'].includes(cardValue)) {\r\n      socket.emit('usePower');\r\n    } else if (['J', 'Q'].includes(cardValue)) {\r\n      socket.emit('usePower');\r\n    } else {\r\n      socket.emit('usePower');\r\n    }\r\n    setShowPopup(false);\r\n  };\r\n\r\n  const handleReplaceCard = () => {\r\n    setAllowCardReplacement(true);\r\n    setShowPopup(false);\r\n  };\r\n\r\n  const handleCardSelection = (cardValue, cardIndex, playerIndex) => {\r\n    if (allowCardSelection) {\r\n      setSelectedCardValue(cardValue);\r\n      setShowCardValuePopup(true);\r\n      setAllowCardSelection(false);\r\n      socket.emit('selectCard');\r\n    } else if (allowCardSwap) {\r\n      const selectedCard = { playerIndex, cardIndex };\r\n      const newSelectedCards = [...selectedCards, selectedCard];\r\n      setSelectedCards(newSelectedCards);\r\n\r\n      if (newSelectedCards.length === 2) {\r\n        socket.emit('swapCards', newSelectedCards[0], newSelectedCards[1]);\r\n        setSelectedCards([]);\r\n        setAllowCardSwap(false);\r\n      }\r\n    } else if (allowCardReplacement && playerIndex === currentTurn) {\r\n      socket.emit('replaceCard', playerIndex, cardIndex);\r\n      setAllowCardReplacement(false);\r\n    } else if (swapFromPile2 && playerIndex === currentTurn) {\r\n      socket.emit('replaceCardFromPile2', currentTurn, cardIndex);\r\n      setSwapFromPile2(false);\r\n    }\r\n  };\r\n\r\n  const closeCardValuePopup = () => {\r\n    setShowCardValuePopup(false);\r\n  };\r\n\r\n  const handleSwapFromPile2 = () => {\r\n    if (card2Pile.length > 0) {\r\n      socket.emit('useCardFromPile2');\r\n\t}\r\n  };\r\n\r\n  const swapCardFromPile2 = (playerIndex, cardIndex) => {\r\n    if (playerIndex !== null && card2Pile.length > 0) {\r\n      socket.emit('swapCardFromPile2', playerIndex, cardIndex);\r\n    }\r\n  };\r\n\r\n  const callCabo = () => {\r\n    socket.emit('callCabo');\r\n    setShowCaboPopup(true);\r\n    setCaboCalled(true);\r\n    setExtraTurnsLeft(players.length - 1);\r\n    setTimeout(() => {\r\n      setShowCaboPopup(false);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleNextTurn = () => {\r\n    if (caboCalled) {\r\n      if (extraTurnsLeft > 0) {\r\n        setExtraTurnsLeft(extraTurnsLeft - 1);\r\n        onNextTurn();\r\n      } else {\r\n        socket.emit('endGame');\r\n      }\r\n    } else {\r\n      onNextTurn();\r\n    }\r\n  };\r\n\r\n  const renderPlayerSection = (player, index, position) => {\r\n    const isCurrentTurn = currentTurn === index;\r\n\r\n    return (\r\n      <div key={index} className={`player-section ${position}`}>\r\n        {position === 'bottom' && (\r\n          <div className=\"player-hand\">\r\n            {player.cards.map((card, cardIndex) => (\r\n              <div\r\n                key={cardIndex}\r\n                className={`card ${allowCardSelection || allowCardSwap || (allowCardReplacement && index === currentTurn) ? 'selectable' : ''}`}\r\n                onClick={() => (allowCardSelection || allowCardSwap || (allowCardReplacement && index === currentTurn)) && handleCardSelection(card, cardIndex, index)}\r\n                style={{ cursor: allowCardSelection || allowCardSwap || (allowCardReplacement && index === currentTurn) ? 'pointer' : 'default' }}\r\n              >\r\n                {card}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n        <div className={`player-card ${isCurrentTurn ? 'current-turn' : ''}`}>\r\n          <img src={player.profileImage} alt={`${player.name}'s profile`} />\r\n          <h3>{player.name}</h3>\r\n        </div>\r\n        {position === 'top' && (\r\n          <div className=\"player-hand\">\r\n            {player.cards.map((card, cardIndex) => (\r\n              <div\r\n                key={cardIndex}\r\n                className={`card ${allowCardSelection || allowCardSwap || (allowCardReplacement && index === currentTurn) ? 'selectable' : ''}`}\r\n                onClick={() => (allowCardSelection || allowCardSwap || (allowCardReplacement && index === currentTurn)) && handleCardSelection(card, cardIndex, index)}\r\n                style={{ cursor: allowCardSelection || allowCardSwap || (allowCardReplacement && index === currentTurn) ? 'pointer' : 'default' }}\r\n              >\r\n                {card}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-lobby\">\r\n      <h2>Game Lobby</h2>\r\n      <div className=\"game-content\">\r\n        <div className=\"sidebar\">\r\n          <div className=\"sidebar-cards\">\r\n            <div className=\"sidebar-card\" onClick={handleCardClick}>\r\n              Remaining: {card1Pile.length} cards\r\n            </div>\r\n            <div className=\"sidebar-card\" onClick={handleSwapFromPile2}>\r\n              {card2Pile.length > 0 ? `Card 2: ${card2Pile[card2Pile.length - 1]}` : 'Card 2'}\r\n            </div>\r\n          </div>\r\n          <div className=\"sidebar-buttons\">\r\n            <button>Button 1</button>\r\n            <button onClick={callCabo}>Call Cabo</button>\r\n            <button onClick={handleSwapFromPile2}>Swap Card from Pile 2</button>\r\n            <button onClick={handleNextTurn}>Next Turn</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"game-board\">\r\n          <div className=\"row top-row\">\r\n            {players.slice(0, 4).map((player, index) => renderPlayerSection(player, index, 'top'))}\r\n          </div>\r\n          <div className=\"row bottom-row\">\r\n            {players.slice(4, 8).map((player, index) => renderPlayerSection(player, index + 4, 'bottom'))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <h3>Top Card: {topCard}</h3>\r\n            <button onClick={handleUsePower}>Use Power</button>\r\n            <button onClick={handleReplaceCard}>Replace Card</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showCardValuePopup && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <h3>Selected Card Value: {selectedCardValue}</h3>\r\n            <button onClick={closeCardValuePopup}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {showCaboPopup && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <h3>The current player has called Cabo!</h3>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameLobby;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}