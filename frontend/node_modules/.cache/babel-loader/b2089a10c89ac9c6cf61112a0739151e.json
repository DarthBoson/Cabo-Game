{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\Project Juhari v2\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport LoginPage from './components/LoginPage';\nimport WaitingLobby from './components/WaitingLobby';\nimport GameLobby from './components/GameLobby';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [profileImage, setProfileImage] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [players, setPlayers] = useState([]);\n  const [initialCards, setInitialCards] = useState([]);\n  const [currentTurn, setCurrentTurn] = useState(0);\n  const [remainingDeck, setRemainingDeck] = useState([]);\n  useEffect(() => {\n    socket.on('gameUpdate', ({\n      players,\n      gameStarted,\n      initialCards,\n      currentTurn,\n      remainingDeck\n    }) => {\n      setPlayers(players);\n      setIsGameStarted(gameStarted);\n      setInitialCards(initialCards);\n      setCurrentTurn(currentTurn);\n      setRemainingDeck(remainingDeck);\n    });\n    return () => socket.off('gameUpdate');\n  }, []);\n  const handleLogin = (name, image) => {\n    setUsername(name);\n    setProfileImage(image);\n    setIsLoggedIn(true);\n    socket.emit('joinLobby', {\n      username: name,\n      profileImage: image\n    });\n  };\n  const handleStartGame = () => {\n    socket.emit('startGame');\n  };\n  const handleNextTurn = () => {\n    socket.emit('nextTurn');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this), isLoggedIn && !isGameStarted && /*#__PURE__*/_jsxDEV(WaitingLobby, {\n      players: players,\n      onStartGame: handleStartGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 40\n    }, this), isLoggedIn && isGameStarted && /*#__PURE__*/_jsxDEV(GameLobby, {\n      players: players,\n      initialCards: initialCards,\n      currentTurn: currentTurn,\n      onNextTurn: handleNextTurn,\n      remainingDeck: remainingDeck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8sR7yyWBsIcf/15R6buxSL82SBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","LoginPage","WaitingLobby","GameLobby","jsxDEV","_jsxDEV","socket","App","_s","username","setUsername","profileImage","setProfileImage","isLoggedIn","setIsLoggedIn","isGameStarted","setIsGameStarted","players","setPlayers","initialCards","setInitialCards","currentTurn","setCurrentTurn","remainingDeck","setRemainingDeck","on","gameStarted","off","handleLogin","name","image","emit","handleStartGame","handleNextTurn","className","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onStartGame","onNextTurn","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Documents/Project Juhari v2/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport LoginPage from './components/LoginPage';\r\nimport WaitingLobby from './components/WaitingLobby';\r\nimport GameLobby from './components/GameLobby';\r\n\r\nconst socket = io('http://localhost:4000');\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [profileImage, setProfileImage] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isGameStarted, setIsGameStarted] = useState(false);\r\n  const [players, setPlayers] = useState([]);\r\n  const [initialCards, setInitialCards] = useState([]);\r\n  const [currentTurn, setCurrentTurn] = useState(0);\r\n  const [remainingDeck, setRemainingDeck] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on('gameUpdate', ({ players, gameStarted, initialCards, currentTurn, remainingDeck }) => {\r\n      setPlayers(players);\r\n      setIsGameStarted(gameStarted);\r\n      setInitialCards(initialCards);\r\n      setCurrentTurn(currentTurn);\r\n      setRemainingDeck(remainingDeck);\r\n    });\r\n\r\n    return () => socket.off('gameUpdate');\r\n  }, []);\r\n\r\n  const handleLogin = (name, image) => {\r\n    setUsername(name);\r\n    setProfileImage(image);\r\n    setIsLoggedIn(true);\r\n    socket.emit('joinLobby', { username: name, profileImage: image });\r\n  };\r\n\r\n  const handleStartGame = () => {\r\n    socket.emit('startGame');\r\n  };\r\n\r\n  const handleNextTurn = () => {\r\n    socket.emit('nextTurn');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!isLoggedIn && <LoginPage onLogin={handleLogin} />}\r\n      {isLoggedIn && !isGameStarted && <WaitingLobby players={players} onStartGame={handleStartGame} />}\r\n      {isLoggedIn && isGameStarted && <GameLobby players={players} initialCards={initialCards} currentTurn={currentTurn} onNextTurn={handleNextTurn} remainingDeck={remainingDeck} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}